<?php


namespace rapidPHP\library\core\server;


use Co;
use Swoole\Http\Request as SwooleRequest;
use Swoole\WebSocket\Frame;
use Swoole\WebSocket\Server;

abstract class SWebSocketServer extends SwooleServer
{

    /**
     * @var Server
     */
    private $server;

    /**
     * @return Server
     */
    public final function getServer(): Server
    {
        return $this->server;
    }


    /**
     * 快速获取实例对象
     * @return SHttpServer
     */
    abstract public static function getInstance();

    /**
     * 创建httpServer
     * @return $this
     */
    public final function create()
    {
        Co::set(['hook_flags' => SWOOLE_HOOK_ALL | SWOOLE_HOOK_CURL]);

        $this->server = new Server($this->getIp(), $this->getPort());

        return $this;
    }

    /**
     * 开启web服务，只能调用一次
     */
    public final function start()
    {
        $this->on("open", [$this, 'onOpen']);

        $this->on('message', [$this, 'onMessage']);

        $this->on('close', [$this, 'onClose']);

        parent::start();
    }

    /**
     * Server开启
     * @param Server $server
     */
    public function onStart($server)
    {
        $host = $server->host;

        if ($host === '0.0.0.0') $host = '127.0.0.1';

        if ($server->port != 80) $host .= ':' . $server->port;

        echo "http server is started at ws://{$host}\n";

        // TODO: Change the autogenerated stub
    }

    /**
     * 监听ws被打开
     * @param Server $server
     * @param $req
     */
    public function onOpen(Server $server, SwooleRequest $req)
    {
        // TODO: Change the autogenerated stub
    }

    /**
     * 收到消息
     * @param Server $server
     * @param Frame $frame
     */
    public function onMessage(Server $server, Frame $frame)
    {
        // TODO: Change the autogenerated stub
    }

    /**
     * 关闭
     * @param Server $server
     * @param $fd
     */
    public function onClose(Server $server, $fd)
    {
        // TODO: Change the autogenerated stub
    }
}
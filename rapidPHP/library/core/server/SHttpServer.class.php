<?php


namespace rapidPHP\library\core\server;


use Swoole\Http\Request as SwooleRequest;
use Swoole\Http\Response as SwooleResponse;
use Swoole\Http\Server;

abstract class SHttpServer extends SwooleServer
{

    /**
     * SHttpServer constructor.
     * @param string $ip
     * @param int $port
     * @param string $sessionKey
     * @param array $options
     */
    public function __construct(string $ip = self::DEFAULT_IP, int $port = 9501, string $sessionKey = self::DEFAULT_SESSIONKEY, array $options = [])
    {
        parent::__construct(Server::class, $ip, $port, $sessionKey, $options);
    }

    /**
     * 获取客户端sessionId
     * @param SwooleRequest $req
     * @param SwooleResponse $res
     * @return mixed|string|null
     */
    private function getClientSessionId(SwooleRequest $req, SwooleResponse $res)
    {
        $sessionId = B()->getData($req->cookie, parent::getSessionKey());

        if (strlen($sessionId) != 32) $sessionId = null;

        if (is_null($sessionId)) {
            $sessionId = md5(uniqid(mt_rand(), true));

            if ($res->cookie(parent::getSessionKey(), $sessionId, 0, '/')) {
                return $sessionId;
            } else {
                return null;
            }
        }

        return $sessionId;
    }


    /**
     * 开启web服务，只能调用一次
     * @return SHttpServer
     */
    public function start()
    {
        $this->on("start", [$this, 'onStart']);

        $this->on("request", [$this, 'onRequest']);

        return parent::start();
    }

    /**
     * httpServer开启
     * @param Server $server
     */
    public function onStart($server)
    {
        $host = $server->host;

        if ($host === '0.0.0.0') $host = '127.0.0.1';

        if ($server->port != 80) $host .= ':' . $server->port;

        $mode = $this->isHttps() ? 'https' : 'http';

        echo "http server is started at {$mode}://{$host}\n";

        parent::onStart($server);

        // TODO: Change the autogenerated stub
    }


    /**
     * 收到请求
     * @param SwooleRequest $req
     * @param SwooleResponse $res
     */
    public function onRequest(SwooleRequest $req, SwooleResponse $res)
    {
        $req->cookie[parent::getSessionKey()] = $this->getClientSessionId($req, $res);

        if (!$this->isInitTaskInterface && $this->getTaskInterface() instanceof TaskInterface) {
            $this->getTaskInterface()->init();
            $this->isInitTaskInterface = true;
        }

        // TODO: Change the autogenerated stub
    }
}